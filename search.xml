<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JVM</title>
      <link href="2021/01/03/JVM/JVM_1/"/>
      <url>2021/01/03/JVM/JVM_1/</url>
      
        <content type="html"><![CDATA[<p><strong>前言:</strong>    JVM(Java Virtual Model)Java虚拟机模型与JMM(Java Memory Model)不同。</p><h1 id="JVM组件"><a href="#JVM组件" class="headerlink" title="JVM组件"></a>JVM组件</h1><p>　　JVM的主要组成部分包括：<strong>类加载引擎，运行时数据区，执行引擎，本地库接口</strong>。JVM结构图如下所示：</p><p><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2021/png/361120/1609649197780-3e11feeb-b120-48c3-9abb-8691a491e1c3.png" alt="JVM结构图"></p><p>　　<strong>组件的作用：</strong> 首先通过<strong>类加载引擎</strong>将JAVA代码转换成字节码，然后<strong>运行时数据区</strong>会将字节码加载到内存中，由于字节码只是JVM的一套规范指令集，并不能直接交给底层操作系统执行执行，这里需要特定的命令解析器<strong>执行引擎</strong>来解析，在解析的过程会调用其他语言的<strong>本地库接口</strong>来实现整个程序的功能。</p><h1 id="JVM运行时数据区"><a href="#JVM运行时数据区" class="headerlink" title="JVM运行时数据区"></a>JVM运行时数据区</h1><p>从线程的共享与私有角度分类</p><p>　　<strong>私有</strong>：Java虚拟机栈，本地方法栈，程序计数器</p><p>　　<strong>共享</strong>：堆，方法区</p><ol><li><p><strong>程序计数器：</strong>当前线程所执行的字节码的行号指示器，字节码解析器的工作主要是通过改变这个计数器的值，来读取下一条需要执行的字节码指令，分支，循环，跳转，异常处理，线程恢复等基本功能，都需要依赖这个计数器。</p></li><li><p><strong>本地方法栈：</strong>与虚拟机栈的作用是一样的，只不过虚拟机栈是服务JAVA方法的，而本地方法栈是服务虚拟机调用本地Native方法的。</p></li><li><p><strong>Java虚拟机栈：</strong>用于存储局部变量表，操作数栈，动态链接，方法出口信息等。</p></li><li><p><strong>堆：</strong> Java虚拟机中内存最大的一块，是被所有线程共享的，几乎所有的对象实例都在这里分配内存。</p></li><li><p><strong>方法区：</strong>用于存储已经被虚拟机加载的类的信息，常量，静态变量，即时编译后的代码等数据。</p></li></ol><h1 id="类加载器"><a href="#类加载器" class="headerlink" title="类加载器"></a>类加载器</h1><p>　　<strong>对于任意一个类，都需要有加载它的类加载器和这个类本身在一同确立在JVM中的唯一性，每一个类加载器，都有一个独立的类名称空间。类加载器就是根据指定全限定名称将class文件加载到JVM内存里面，然后再转换为class对象。</strong></p><p><strong>分类</strong></p><ol><li><p><strong>启动类加载器</strong><br> 　　虚拟机自身的一部分，用来加载JAVA_HOME/lib目录中的，或者被-Xbootclasspath参数所指定的路径中并且被虚拟机识别的类库。</p></li><li><p><strong>其它类加载器</strong></p><p> 　　a. 扩展类加载器(Extension ClassLoader)：负责加载JAVA_HOME／lib／ext目录或java.ext.dirs系统变量指定的路径中的所有的类库。</p><p> 　　b.应用程序类加载器(Apllication ClassLoader)： 负责加载用户类路径(classpath)上的指定类库，我们可以直接使用这个类加载器。一般而言，我们没有自定义类加载器默认就使用这加载器。</p></li></ol><p><strong>除了以上三种，我们还可以通过集成Java.lang.ClassLoader实现自定义的类加载器。</strong></p><h1 id="双亲委派模型"><a href="#双亲委派模型" class="headerlink" title="双亲委派模型"></a>双亲委派模型</h1><p>　　如果一个类加载器收到了类加载的请求，它首先不会自己去加载这个类，而是把这个请求委派给父类去完成，每一层的类加载都是如此，这样所有的请求都会被传送到顶层的<strong>启动类加载器</strong>中，只有当父加载无法完成加载请求(它的搜索范围中没有找到所需要的类)时，子加载器才会尝试去加载。如下图所示：</p><p>  <img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2021/png/361120/1609667428100-3814748e-6294-4ef1-b284-740b5835467e.png" alt="双亲委派模型"></p><h1 id="类加载的执行过程"><a href="#类加载的执行过程" class="headerlink" title="类加载的执行过程"></a>类加载的执行过程</h1><ol><li>加载<br>　　指JVM读取Class文件，并且根据Class文件在堆上创建对象的过程，这里读取Class文件时，可以是文件形式，也可以是Jar包，war包等。</li><li>检查<br>　　检查Class文件是否符合当前虚拟机的要求，保障虚拟机自身的安全。</li><li>准备<br>　　给类中的静态变量分配存储空间。</li><li>解析<br>　　JVM会将常量池中的符号引用替换为直接引用。符号引用理解为一个标识，而直接引用直接指向内存中的地址。</li><li>初始化<br>　　对静态变量和静态代码块进行初始化工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夏天</title>
      <link href="2021/01/02/summer/"/>
      <url>2021/01/02/summer/</url>
      
        <content type="html"><![CDATA[<p>  夏天的风很自由。</p>]]></content>
      
      
      <categories>
          
          <category> young </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 枯木逢春夏秋冬 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim基本使用</title>
      <link href="2021/01/02/linux/vim/"/>
      <url>2021/01/02/linux/vim/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1424018194&auto=1&height=66"></iframe><h2 id="三种模式转换"><a href="#三种模式转换" class="headerlink" title="三种模式转换"></a>三种模式转换</h2><p>命令模式：移动光标、删除  输入: / ?进入命令行模式 输入aiorAIOR进入插入模式</p><p>插入模式：输入文本 按ESC进入命令模式</p><p>命令行模式：搜索保存退出  按Esc进入模式</p><h2 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h2><ol><li><p>移动光标<br>h,j,k,l分别代表左下上右，可以加入数字控制位置,10j,向下移动10行<br>0:移动到当前行首  $:移动前行尾<br>G:移动到文件的最后一行,nG:移动到n行，gg移动到第一行<br>n<Enter> 向下移动n行</p></li><li><p>编辑<br>x:向后删除一个字符    X:向前删除一个字符<br>nx:向后删除n个字符<br>dd:删除一行            ndd:向下删除n行<br>u:撤销前一个操作</p></li><li><p>查找与替换<br> /word: 向后查找word单词，可以是正则表达式</p><p> ?word:向前查找word</p><p> :%s/word1/word2[gc]:将word1替换成word2，g全局，gc替换时确认,%整个文本替换</p><h2 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h2><p> i,I:进入插入模式，前者在当前位置插入，后者为当前行第一个非空白字符</p><p> o,O:前者在当前行的后面插入新行，后者在当前行的前面插入新行</p><p> r,R:前者替换光标所在的字符，后者从当前位置开始替换，直到按下Esc为止</p><h2 id="命令行模式"><a href="#命令行模式" class="headerlink" title="命令行模式"></a>命令行模式</h2><p> :进入命令行模式<br> :q :没有修改文件时推出</p><p> :q!:修改了文件，但不保存文件退出</p><p> :w:保存文件</p><p> :w [文件名]: 另存为一个新文件，当前文件没有保存</p><p> :w!:强制保存</p><p> :x:保存并退出</p><p> :x!:强制保存退出</p><p> :ZZ:有修改保存退出，没有修改直接退出</p><p> :set nu:显示行号</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux常用指令</title>
      <link href="2021/01/02/linux/linux/"/>
      <url>2021/01/02/linux/linux/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1382985712&auto=1&height=66"></iframe><h2 id="linux常识性指令"><a href="#linux常识性指令" class="headerlink" title="linux常识性指令"></a>linux常识性指令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">uname --help//显示帮助</span><br><span class="line">uname -v//输出内核版本信息</span><br><span class="line">uname --version//显示版本信息并退出</span><br><span class="line">who am i//等于who -m 登陆用户的信息</span><br><span class="line">who//查询当前登录在系统上的用户信息</span><br><span class="line"><span class="meta">#</span><span class="bash">//root登陆具有所有权限</span></span><br><span class="line"><span class="meta">$</span><span class="bash">//普通用户没什么权限</span></span><br></pre></td></tr></table></figure><h2 id="文件的传输"><a href="#文件的传输" class="headerlink" title="文件的传输"></a>文件的传输</h2><p><strong>windows本地安装git bash使用</strong></p><p><em>1.从远处(服务器)复制文件到本地目录</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> scp root@192.168.45.129:/usr/<span class="built_in">local</span>/tmp/test.md ./</span></span><br></pre></td></tr></table></figure><p><em>2.从远处(服务器)复制目录到本地目录</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> scp root@192.168.45.129:/usr/<span class="built_in">local</span>/tmp ./</span></span><br></pre></td></tr></table></figure><p><em>3.上传本地文件到服务器指定目录</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> scp /opt/test.tar root@192.168.45.129:/usr/<span class="built_in">local</span></span></span><br></pre></td></tr></table></figure><p><em>4.上传本地目录到服务器指定目录</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> scp /opt/soft/text root@192.168.45.12:/usr/<span class="built_in">local</span></span></span><br></pre></td></tr></table></figure><p><em>5.windows文件传输到服务器</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install lrzsz</span><br><span class="line">直接将文件拖入到命令行窗口即可</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker与Mongodb的安装</title>
      <link href="2021/01/02/mongodb/mongodb_1/"/>
      <url>2021/01/02/mongodb/mongodb_1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1449116345&auto=1&height=66"></iframe><h2 id="Docker与Mongodb"><a href="#Docker与Mongodb" class="headerlink" title="Docker与Mongodb"></a>Docker与Mongodb</h2><ol><li><p>安装、启动docker</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo yum -y update</span><br><span class="line"></span><br><span class="line">sudo yum -y install epel-release</span><br><span class="line"></span><br><span class="line">sudo yum -y install docker-io</span><br><span class="line"></span><br><span class="line">systemclt start docker       //启动docker</span><br><span class="line"></span><br><span class="line">docker  version//查看docker版本</span><br></pre></td></tr></table></figure></li><li><p>docker的常用命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker ps //查看docker容器id</span><br><span class="line"></span><br><span class="line">docker images//查看本地镜像</span><br><span class="line"></span><br><span class="line">docker ps -a//显示所有容器,-aq只显示id</span><br></pre></td></tr></table></figure></li><li><p>docker安装Mongodb 4.0</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker pull mongo:4   //拉取mongodb4.0镜像</span><br><span class="line"></span><br><span class="line">docker images//查看是否有Mongodb镜像</span><br><span class="line"></span><br><span class="line">//启动mongodb 端口号27017  进程name mongo</span><br><span class="line"></span><br><span class="line">docker run -itd --name mongo -p 27017:27017 mongo:4  //mongodb 4.0版本</span><br><span class="line"></span><br><span class="line">docker run -itd --name mongo -p 27017:27017 mongo:latest //最新版本</span><br><span class="line"></span><br><span class="line">//验证是否启动成功</span><br><span class="line"></span><br><span class="line">docker exec -it mongo mongo</span><br></pre></td></tr></table></figure></li><li><p>docker移除镜像与容器</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line">docker rmi &lt;image id&gt;   &#x2F;&#x2F;强制删除指定id的image</span><br><span class="line"></span><br><span class="line">docker rmi $(docker iamges -q)  &#x2F;&#x2F;删除所有images</span><br><span class="line"></span><br><span class="line">docker stop container-id   &#x2F;&#x2F;停止该id的容器</span><br><span class="line"></span><br><span class="line">docker rm container-id   &#x2F;&#x2F;移除该id的容器</span><br><span class="line"></span><br><span class="line">docker stop $(docker ps -aq)   &#x2F;&#x2F;停止所有的容器</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Nosql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>防火墙常用命令</title>
      <link href="2021/01/02/linux/firewall/"/>
      <url>2021/01/02/linux/firewall/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=416892296&auto=1&height=66"></iframe><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><p><strong>系统centos7</strong></p><p>Centos7默认的防火墙不是iptables而是firewall</p><p>查看防火墙状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state</span><br></pre></td></tr></table></figure><p>开启/关闭防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p>禁止开机启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><p>查看开放的端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure><p>监听端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnp | grep 8080</span><br></pre></td></tr></table></figure><p>开放/关闭端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port&#x3D;80&#x2F;tcp --permanent      &#x2F;&#x2F;开放端口--permanent重启不会丢失</span><br><span class="line">firewall-cmd --remove-port&#x3D;9999&#x2F;tcp --permanent &#x2F;&#x2F;关闭端口</span><br></pre></td></tr></table></figure><p>重启防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload      &#x2F;&#x2F;开放，关闭端口都需要重启防火墙</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> firewall </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch入门</title>
      <link href="2021/01/02/Es/es_1/"/>
      <url>2021/01/02/Es/es_1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1436709403&auto=1&height=66"></iframe><h2 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h2><pre><code>这里选择rpm包安装es, rpm -ivh elasticsearch.rpm 文件存在于/usr/share/配置文件存在/etc/elasticsearch/elasticsearch.yml端口9200通过systemctl start elasticsearch启动，status,stop 查看状态与停止elasticsearch.yml          es的相关配置，此处需要将network.host设置为0.0.0.0jvm.options                jvm的相关参数log4j2.properties          日志相关的配置cluster.name               集群名称，判断是否是同一集群node.name                  节点名称，以此作为集群中不同节点的区分条件network.host/http.port     网络地址与端口，用于http和transport服务与使用path.data                  数据的存储地址path.log                   日志的地址</code></pre><p><strong>Development与Production模式说明</strong></p><pre><code>以transport的地址是否绑定在localhost为判断标准network.hostDevelopment模式下启动以warning的方式提示配置检查异常Production模式下在启动时会以error的方式提示配置检查异常修改参数的第二种方式bin/elasticsearch-Ehttp.port=19200</code></pre><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><ol><li>ES本地启动集群方式</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">bin&#x2F;elasticsearch</span><br><span class="line"></span><br><span class="line">bin&#x2F;elasticsearch -Ehttp.port&#x3D;8200 -Epath.data&#x3D;node2</span><br><span class="line"></span><br><span class="line">bin&#x2F;elasticsearch -Ehttp.port&#x3D;9200 -Epath.data&#x3D;node3</span><br><span class="line"></span><br><span class="line">ip:port&#x2F;_cluster&#x2F;stats更多集群相关信息</span><br><span class="line"></span><br><span class="line">ip:port&#x2F;_cat&#x2F;nodes节点相关信息，是否组成集群，*表示主节点</span><br></pre></td></tr></table></figure><ol start="2"><li>index</li></ol><pre><code>index由具有相同字段的列表组成，相当于mysql的table,6.0后type _doc不再起作用document 文档，每个文档具有唯一的id标识，自行指定或者es生成</code></pre><h2 id="倒排索引"><a href="#倒排索引" class="headerlink" title="倒排索引"></a>倒排索引</h2><p>目录页对应正排索引，索引页对应倒排索引</p><p>正排索引：文档ID到文档内容，单词的关联关系</p><p>倒排索引：单词到文档ID的关联关系</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/09/14/vUZwgH8DJiM3kcp.png" alt="image.png"></p><p>倒排索引是搜索引擎的核心，主要包含：单词词典与倒排列表</p><p>es存储的每个字段都有自己的倒排索引</p><h2 id="索引API"><a href="#索引API" class="headerlink" title="索引API"></a>索引API</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PUT &#x2F;test_index创建索引</span><br><span class="line"></span><br><span class="line">GET _cat&#x2F;indices   查看现有的索引</span><br><span class="line"></span><br><span class="line">DELETE  &#x2F;test_index删除索引</span><br><span class="line"></span><br><span class="line">GET &#x2F;test_index查看当前索引信息</span><br></pre></td></tr></table></figure><h2 id="文档的创建"><a href="#文档的创建" class="headerlink" title="文档的创建"></a>文档的创建</h2><ol><li>单条文档插入</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PUT &#x2F;test_index&#x2F;_doc&#x2F;1 单条数据的插入格式：&#x2F;index&#x2F;type&#x2F;id</span><br><span class="line"></span><br><span class="line">PUT &#x2F;test_index&#x2F;_doc&#x2F;1</span><br><span class="line"></span><br><span class="line">&#123;&quot;username&quot;:&quot;crush&quot;,&quot;job&quot;:&quot;JAVA Engineer&quot;&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>批量文档的插入</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST test_index&#x2F;_bulk</span><br><span class="line"></span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;1&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;username&quot;:&quot;yun&quot;,&quot;job&quot;:&quot;JAVA Engineer&quot;,&quot;age&quot;:18&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;2&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;username&quot;:&quot;crush&quot;,&quot;job&quot;:&quot;Python Engineer&quot;,&quot;age&quot;:20&#125;</span><br></pre></td></tr></table></figure><h2 id="文档的查询"><a href="#文档的查询" class="headerlink" title="文档的查询"></a>文档的查询</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET&#x2F;test_index&#x2F;_doc&#x2F;1查询单条id&#x3D;1,存储在source里面的完整文档信息</span><br><span class="line"></span><br><span class="line">GET&#x2F;test_index&#x2F;_doc&#x2F;_search  query查询，term单词匹配username&#x3D;crush</span><br><span class="line"></span><br><span class="line">&#123;&quot;query&quot;:&#123;&quot;term&quot;:&#123;&quot;username&quot;:&quot;crush&quot;&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">GET &#x2F;test_index&#x2F;_mget查询id是1,2的文档</span><br><span class="line"></span><br><span class="line">&#123;&quot;docs&quot;:[&#123;&quot;_id&quot;:&quot;1&quot;,&quot;_id&quot;:&quot;2&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure><h2 id="Search-API"><a href="#Search-API" class="headerlink" title="Search API"></a>Search API</h2><p>对es里面存储的数据进行查询分析，endpoint为_search</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET&#x2F;_search</span><br><span class="line"></span><br><span class="line">GET&#x2F;test_index&#x2F;_search</span><br><span class="line"></span><br><span class="line">GET&#x2F;test1_index,test2_index&#x2F;_search</span><br><span class="line"></span><br><span class="line">GET    &#x2F;test*&#x2F;_search每次可以查询多个索引</span><br></pre></td></tr></table></figure><h3 id="URL-Search与Request-Body-Search"><a href="#URL-Search与Request-Body-Search" class="headerlink" title="URL Search与Request Body Search"></a>URL Search与Request Body Search</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># url search</span><br><span class="line"></span><br><span class="line">GET &#x2F;my_index&#x2F;_search?q&#x3D;crush&amp;df&#x3D;user&amp;sort&#x3D;age:asc&amp;from&#x3D;4&amp;size&#x3D;10&amp;timeout&#x3D;15</span><br></pre></td></tr></table></figure><p> q指定查询的语句,df或者default，不指定默认查询，es会查询所有字段,from size用于分页，返回5-14个文档</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># request body search</span><br><span class="line"></span><br><span class="line">GET&#x2F;my_index&#x2F;_doc&#x2F;_search</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&quot;query&quot;:&#123;&quot;term&quot;:&#123;&quot;user&quot;:&quot;crush&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="QueryDSL查询"><a href="#QueryDSL查询" class="headerlink" title="QueryDSL查询"></a>QueryDSL查询</h3><p>字段类查询: 全文匹配、match、match_phrase等query,单词匹配：term、terms、range等query</p><p><strong>match Query</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GETtest_index&#x2F;_search</span><br><span class="line"></span><br><span class="line">&#123;&quot;query&quot;:&#123;&quot;match&quot;:&#123;&quot;username&quot;:&quot;crush&quot;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># operator and</span><br><span class="line"></span><br><span class="line">GET test_index&#x2F;_search</span><br><span class="line"></span><br><span class="line">&#123;&quot;query&quot;:&#123;&quot;match&quot;:&#123;&quot;username&quot;:&#123;&quot;query&quot;:&quot;yun crush&quot;,&quot;operator&quot;:&quot;and&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#最小匹配字段数</span><br><span class="line"></span><br><span class="line">GETtest_index&#x2F;_search</span><br><span class="line"></span><br><span class="line">&#123;&quot;query&quot;:&#123;&quot;match&quot;:&#123;&quot;job&quot;:&#123;&quot;query&quot;:&quot;java python Engineer&quot;,&quot;minium_should_match&quot;:&quot;2&quot;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
